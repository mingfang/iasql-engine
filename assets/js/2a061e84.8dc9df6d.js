"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[2281],{3905:(e,t,n)=>{n.d(t,{Zo:()=>i,kt:()=>g});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function u(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var p=r.createContext({}),l=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):u(u({},t),e)),n},i=function(e){var t=l(e.components);return r.createElement(p.Provider,{value:t},e.children)},c="mdxType",b={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,p=e.parentName,i=s(e,["components","mdxType","originalType","parentName"]),c=l(n),m=o,g=c["".concat(p,".").concat(m)]||c[m]||b[m]||a;return n?r.createElement(g,u(u({ref:t},i),{},{components:n})):r.createElement(g,u({ref:t},i))}));function g(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,u=new Array(a);u[0]=m;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s[c]="string"==typeof e?e:o,u[1]=s;for(var l=2;l<a;l++)u[l]=n[l];return r.createElement.apply(null,u)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},7560:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>u,default:()=>c,frontMatter:()=>a,metadata:()=>s,toc:()=>l});var r=n(7462),o=(n(7294),n(3905));const a={id:"aws_memory_db_entity_subnet_group.SubnetGroup",title:"Table: subnet_group",displayed_sidebar:"docs",sidebar_label:"SQL",sidebar_position:0,custom_edit_url:null},u=void 0,s={unversionedId:"reference/classes/aws_memory_db_entity_subnet_group.SubnetGroup",id:"reference/classes/aws_memory_db_entity_subnet_group.SubnetGroup",title:"Table: subnet_group",description:"Table to manage Memory DB subnet groups. A subnet group is a collection of subnets (typically private) that you can",source:"@site/docs/reference/classes/aws_memory_db_entity_subnet_group.SubnetGroup.md",sourceDirName:"reference/classes",slug:"/reference/classes/aws_memory_db_entity_subnet_group.SubnetGroup",permalink:"/docs/next/reference/classes/aws_memory_db_entity_subnet_group.SubnetGroup",draft:!1,editUrl:null,tags:[],version:"current",sidebarPosition:0,frontMatter:{id:"aws_memory_db_entity_subnet_group.SubnetGroup",title:"Table: subnet_group",displayed_sidebar:"docs",sidebar_label:"SQL",sidebar_position:0,custom_edit_url:null},sidebar:"docs"},p={},l=[{value:"Columns",id:"columns",level:2}],i={toc:l};function c(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},i,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Table to manage Memory DB subnet groups. A subnet group is a collection of subnets (typically private) that you can\ndesignate for your clusters running in an Amazon Virtual Private Cloud (VPC) environment.\nWhen you create a cluster in an Amazon VPC, you can specify a subnet group or use the default one provided.\nMemoryDB uses that subnet group to choose a subnet and IP addresses within that subnet to associate with your nodes."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("inlineCode",{parentName:"strong"},"Example"))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sql",metastring:'TheButton[Manage a MemoryDB subnet group]="Manage a MemoryDB subnet group"',"TheButton[Manage":!0,a:!0,MemoryDB:!0,subnet:!0,"group]":'"Manage','group"':!0},"INSERT INTO subnet_group (subnet_group_name) VALUES ('subnet_group');\nSELECT * FROM subnet_group WHERE subnet_group_name = 'subnet_group';\nDELETE FROM subnet_group WHERE subnet_group_name = 'subnet_group';\n")),(0,o.kt)("p",null,(0,o.kt)("button",{className:"button button--primary button--lg margin-bottom--lg",onClick:()=>window.open("https://app.iasql.com/#/button/Manage%20a%20MemoryDB%20subnet%20group/INSERT%20INTO%20subnet_group%20%28subnet_group_name%29%20VALUES%20%28%27subnet_group%27%29%3B%0ASELECT%20*%20FROM%20subnet_group%20WHERE%20subnet_group_name%20%3D%20%27subnet_group%27%3B%0ADELETE%20FROM%20subnet_group%20WHERE%20subnet_group_name%20%3D%20%27subnet_group%27%3B","_blank")},"Manage a MemoryDB subnet group")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("inlineCode",{parentName:"strong"},"See"))),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/iasql/iasql-engine/blob/b2c2383b73d73f5cdf75c867d334e80cdf40caa1/test/modules/aws-memory-db-integration.ts#L109"},"https://github.com/iasql/iasql-engine/blob/b2c2383b73d73f5cdf75c867d334e80cdf40caa1/test/modules/aws-memory-db-integration.ts#L109")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://docs.aws.amazon.com/memorydb/latest/devguide/subnetgroups.html"},"https://docs.aws.amazon.com/memorydb/latest/devguide/subnetgroups.html"))),(0,o.kt)("h2",{id:"columns"},"Columns"),(0,o.kt)("p",null,"\u2022 ",(0,o.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,o.kt)("strong",{parentName:"p"},"arn"),": ",(0,o.kt)("inlineCode",{parentName:"p"},"string")),(0,o.kt)("p",null,"AWS ARN for the subnet group"),(0,o.kt)("p",null,"\u2022 ",(0,o.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,o.kt)("strong",{parentName:"p"},"description"),": ",(0,o.kt)("inlineCode",{parentName:"p"},"string")),(0,o.kt)("p",null,"Description for the subnet group"),(0,o.kt)("p",null,"\u2022 ",(0,o.kt)("strong",{parentName:"p"},"region"),": ",(0,o.kt)("inlineCode",{parentName:"p"},"string")),(0,o.kt)("p",null,"Region for the subnet group"),(0,o.kt)("p",null,"\u2022 ",(0,o.kt)("strong",{parentName:"p"},"subnet","_","group","_","name"),": ",(0,o.kt)("inlineCode",{parentName:"p"},"string")),(0,o.kt)("p",null,"Name for the subnet group"),(0,o.kt)("p",null,"\u2022 ",(0,o.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,o.kt)("strong",{parentName:"p"},"subnets"),": ",(0,o.kt)("inlineCode",{parentName:"p"},"string"),"[]"),(0,o.kt)("p",null,"List of subnets associated with the group"))}c.isMDXComponent=!0}}]);