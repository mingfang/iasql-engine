"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[7383],{3905:(t,e,s)=>{s.d(e,{Zo:()=>c,kt:()=>g});var n=s(7294);function o(t,e,s){return e in t?Object.defineProperty(t,e,{value:s,enumerable:!0,configurable:!0,writable:!0}):t[e]=s,t}function a(t,e){var s=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),s.push.apply(s,n)}return s}function r(t){for(var e=1;e<arguments.length;e++){var s=null!=arguments[e]?arguments[e]:{};e%2?a(Object(s),!0).forEach((function(e){o(t,e,s[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(s)):a(Object(s)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(s,e))}))}return t}function i(t,e){if(null==t)return{};var s,n,o=function(t,e){if(null==t)return{};var s,n,o={},a=Object.keys(t);for(n=0;n<a.length;n++)s=a[n],e.indexOf(s)>=0||(o[s]=t[s]);return o}(t,e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);for(n=0;n<a.length;n++)s=a[n],e.indexOf(s)>=0||Object.prototype.propertyIsEnumerable.call(t,s)&&(o[s]=t[s])}return o}var l=n.createContext({}),u=function(t){var e=n.useContext(l),s=e;return t&&(s="function"==typeof t?t(e):r(r({},e),t)),s},c=function(t){var e=u(t.components);return n.createElement(l.Provider,{value:e},t.children)},p="mdxType",d={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},h=n.forwardRef((function(t,e){var s=t.components,o=t.mdxType,a=t.originalType,l=t.parentName,c=i(t,["components","mdxType","originalType","parentName"]),p=u(s),h=o,g=p["".concat(l,".").concat(h)]||p[h]||d[h]||a;return s?n.createElement(g,r(r({ref:e},c),{},{components:s})):n.createElement(g,r({ref:e},c))}));function g(t,e){var s=arguments,o=e&&e.mdxType;if("string"==typeof t||o){var a=s.length,r=new Array(a);r[0]=h;var i={};for(var l in e)hasOwnProperty.call(e,l)&&(i[l]=e[l]);i.originalType=t,i[p]="string"==typeof t?t:o,r[1]=i;for(var u=2;u<a;u++)r[u]=s[u];return n.createElement.apply(null,r)}return n.createElement.apply(null,s)}h.displayName="MDXCreateElement"},6261:(t,e,s)=>{s.r(e),s.d(e,{assets:()=>l,contentTitle:()=>r,default:()=>p,frontMatter:()=>a,metadata:()=>i,toc:()=>u});var n=s(7462),o=(s(7294),s(3905));const a={slug:"deploy-ghost-ec2",title:"Deploy Ghost in EC2 with one click",date:new Date("2022-11-23T00:00:00.000Z"),authors:["yrobla"]},r='Deploy <a href="https://ghost.org/">Ghost</a> to AWS with one click',i={permalink:"/blog/deploy-ghost-ec2",source:"@site/blog/2022/deploy-ghost-ec2.mdx",title:"Deploy Ghost in EC2 with one click",description:"Ghost is a powerful app for new-media creators to publish, share, and grow a business around their content. It comes with modern tools to build a website, publish content, send newsletters & offer paid",date:"2022-11-23T00:00:00.000Z",formattedDate:"November 23, 2022",tags:[],readingTime:3.845,hasTruncateMarker:!1,authors:[{name:"Yolanda Robla",imageURL:"https://github.com/yrobla.png",key:"yrobla"}],frontMatter:{slug:"deploy-ghost-ec2",title:"Deploy Ghost in EC2 with one click",date:"2022-11-23T00:00:00.000Z",authors:["yrobla"]},nextItem:{title:"Deploying to ECS, Simplified!",permalink:"/blog/ecs-simplified"}},l={authorsImageUrls:[void 0]},u=[{value:"Pre-requisites",id:"pre-requisites",level:2},{value:"Ghost installation",id:"ghost-installation",level:2},{value:"Accessing Ghost",id:"accessing-ghost",level:2}],c={toc:u};function p(t){let{components:e,...s}=t;return(0,o.kt)("wrapper",(0,n.Z)({},c,s,{components:e,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Ghost is a powerful app for new-media creators to publish, share, and grow a business around their content. It comes with modern tools to build a website, publish content, send newsletters & offer paid\nsubscriptions to members."),(0,o.kt)("p",null,"Ghost is a software as a service product, but it is built totally on open source and offers a self-hosted, self-serve version. This version can be hosted on AWS using several approaches, and one of them."),(0,o.kt)("p",null,"Starting an EC2 instance and manually triggering the installation commands is a procedure that can be done manually, but there are also another dependencies involved, such as the creation of proper security groups.\nIt is time-consuming task, specially if you need to install several instances. This article will offer a way to install Ghost with one-click on IaSQL using an EC2 instance on Ubuntu as highlighted ",(0,o.kt)("a",{href:"https://ghost.org/docs/install/ubuntu/"},"here"),"."),(0,o.kt)("p",null,"_This approach uses ",(0,o.kt)("a",{href:"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/user-data.html"},"EC2 user data")," functionality - to run an startup script that will configure Ghost\nas soon as the instance is started - and ",(0,o.kt)("a",{href:"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instancedata-data-retrieval.html"},"EC2 instance metadata")," - to retrieve\nthe public IP of the instance, and assign it dynamically to Ghost installation script."),(0,o.kt)("h2",{id:"pre-requisites"},"Pre-requisites"),(0,o.kt)("p",null,"This post is going to rely on EC2 to install the Ghost content. In order to access to the instance, it is recommended to setup an SSH key, to be able to access it later for modifications and maintenance. So we will be generating some keys\nand importing them to later associate with the EC2 instance. If you do not have an existing key, please generate one. The output of the public key will be the one imported into the system:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"ssh-keygen -t rsa -f /tmp/key\nPUBKEY=$(cat /tmp/key.pub)\n")),(0,o.kt)("p",null,"The public key will be then imported into the system:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sql",metastring:'TheButton[Generate keypair]="Import keypair"',"TheButton[Generate":!0,"keypair]":'"Import','keypair"':!0}," -- Install modules\nSELECT\n  *\nFROM\n  iasql_install ('aws_ec2', 'aws_ec2_metadata');\n\n-- Request a keypair\nSELECT * FROM key_pair_import ('ghost', '<your_pubkey_content>', 'us-east-2');\n")),(0,o.kt)("p",null,(0,o.kt)("button",{className:"button button--primary button--lg margin-bottom--lg",onClick:()=>window.open("https://app.iasql.com/#/button/Generate%20keypair/%20--%20Install%20modules%0ASELECT%0A%20%20*%0AFROM%0A%20%20iasql_install%20%28%27aws_ec2%27%2C%20%27aws_ec2_metadata%27%29%3B%0A%0A--%20Request%20a%20keypair%0ASELECT%20*%20FROM%20key_pair_import%20%28%27ghost%27%2C%20%27%3Cyour_pubkey_content%3E%27%2C%20%27us-east-2%27%29%3B","_blank")},"Import keypair")),(0,o.kt)("h2",{id:"ghost-installation"},"Ghost installation"),(0,o.kt)("p",null,"After the keypair has been imported, we can proceed with the installation of the instance itself, associating the created key to allow SSH access after it is created."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sql",metastring:'TheButton[Install Ghost]="Install Ghost"',"TheButton[Install":!0,"Ghost]":'"Install','Ghost"':!0},"-- start transaction\nSELECT * FROM iasql_begin();\n\n-- insert security groups\nINSERT INTO\n  security_group (description, group_name)\nVALUES\n  ('Ghost security group', 'ghost_sg');\n\nINSERT INTO\n  security_group_rule (is_egress, ip_protocol, from_port, to_port, cidr_ipv4, description, security_group_id)\nSELECT\n  t.is_egress,\n  t.ip_protocol,\n  t.from_port,\n  t.to_port,\n  t.cidr_ipv4::cidr,\n  t.description,\n  security_group.id\nFROM\n  security_group,\n  (\n    VALUES\n      (FALSE, 'tcp', 22, 22, '0.0.0.0/0', 'ghost_sg_rule_ssh'),\n      (FALSE, 'tcp', 80, 80, '0.0.0.0/0', 'ghost_sg_rule_http'),\n      (FALSE, 'tcp', 443, 443, '0.0.0.0/0', 'ghost_sg_rule_https'),\n      (TRUE, 'tcp', 1, 65535, '0.0.0.0/0', 'ghost_sg_rule_egress')\n  ) AS t (is_egress, ip_protocol, from_port, to_port, cidr_ipv4, description)\nWHERE\n  security_group.group_name = 'ghost_sg';\n\n-- insert instance with the right userdata\nINSERT INTO\n  instance (ami, instance_type, subnet_id, tags, user_data, key_pair_name, region)\nSELECT\n  'resolve:ssm:/aws/service/canonical/ubuntu/server/22.04/stable/current/amd64/hvm/ebs-gp2/ami-id',\n  't2.small',\n  subnet.id,\n  '{\"name\":\"ghost-blog\"}',\n  '#!/bin/bash\nuseradd -m ghostuser\nusermod -a -G sudo ghostuser\necho \"ghostuser ALL=(ALL:ALL) NOPASSWD: ALL\" | sudo tee /etc/sudoers.d/ghostuser\nsudo -E apt-get update -y\nsudo -E apt-get upgrade -y\nsudo -E apt-get -y install nginx\nsudo -E ufw allow \"Nginx Full\"\nsudo -E apt-get -y install mysql-server\nsudo -E mysql -u root -e \"ALTER USER \"root\"@\"localhost\" IDENTIFIED WITH mysql_native_password BY \\\"ghost\\\";\"\ncurl -sL https://deb.nodesource.com/setup_16.x | sudo -E bash\nsudo -E apt-get -y install nodejs\nsudo npm install ghost-cli@latest -g\nsudo -E mkdir -p /var/www/ghost\nsudo -E chown ghostuser /var/www/ghost\nsudo chmod 775 /var/www/ghost\ncd /var/www/ghost/\nsudo -u ghostuser ghost install --url http://$(curl http://169.254.169.254/latest/meta-data/public-ipv4) --db mysql --dbpass ghost --no-prompt --start --enable\n', 'ghost',\n  'us-east-2'\nFROM\n  subnet\n  INNER JOIN vpc ON vpc.id = subnet.vpc_id\n  AND vpc.is_default = 'Y'\nWHERE\n  vpc.region = 'us-east-2'\n  AND subnet.availability_zone = 'us-east-2a'\nLIMIT\n  1;\n\n-- insert instance security groups\nINSERT INTO\n  instance_security_groups (instance_id, security_group_id)\nSELECT\n  (\n    SELECT\n      id\n    FROM\n      instance\n    WHERE\n      tags ->> 'name' = 'ghost-blog'\n    LIMIT\n      1\n  ),\n  (\n    SELECT\n      id\n    FROM\n      security_group\n    WHERE\n      group_name = 'ghost_sg'\n      AND region = 'us-east-2'\n    LIMIT\n      1\n  );\n\nSELECT\n  *\nFROM\n  iasql_commit();\n")),(0,o.kt)("p",null,(0,o.kt)("button",{className:"button button--primary button--lg margin-bottom--lg",onClick:()=>{Cookies.set("2af3da94e843f47647d798890959c35aac237ac21b2d308d6343905828142b09",LZString.compressToBase64("--%20start%20transaction%0ASELECT%20*%20FROM%20iasql_begin%28%29%3B%0A%0A--%20insert%20security%20groups%0AINSERT%20INTO%0A%20%20security_group%20%28description%2C%20group_name%29%0AVALUES%0A%20%20%28%27Ghost%20security%20group%27%2C%20%27ghost_sg%27%29%3B%0A%0AINSERT%20INTO%0A%20%20security_group_rule%20%28is_egress%2C%20ip_protocol%2C%20from_port%2C%20to_port%2C%20cidr_ipv4%2C%20description%2C%20security_group_id%29%0ASELECT%0A%20%20t.is_egress%2C%0A%20%20t.ip_protocol%2C%0A%20%20t.from_port%2C%0A%20%20t.to_port%2C%0A%20%20t.cidr_ipv4%3A%3Acidr%2C%0A%20%20t.description%2C%0A%20%20security_group.id%0AFROM%0A%20%20security_group%2C%0A%20%20%28%0A%20%20%20%20VALUES%0A%20%20%20%20%20%20%28FALSE%2C%20%27tcp%27%2C%2022%2C%2022%2C%20%270.0.0.0%2F0%27%2C%20%27ghost_sg_rule_ssh%27%29%2C%0A%20%20%20%20%20%20%28FALSE%2C%20%27tcp%27%2C%2080%2C%2080%2C%20%270.0.0.0%2F0%27%2C%20%27ghost_sg_rule_http%27%29%2C%0A%20%20%20%20%20%20%28FALSE%2C%20%27tcp%27%2C%20443%2C%20443%2C%20%270.0.0.0%2F0%27%2C%20%27ghost_sg_rule_https%27%29%2C%0A%20%20%20%20%20%20%28TRUE%2C%20%27tcp%27%2C%201%2C%2065535%2C%20%270.0.0.0%2F0%27%2C%20%27ghost_sg_rule_egress%27%29%0A%20%20%29%20AS%20t%20%28is_egress%2C%20ip_protocol%2C%20from_port%2C%20to_port%2C%20cidr_ipv4%2C%20description%29%0AWHERE%0A%20%20security_group.group_name%20%3D%20%27ghost_sg%27%3B%0A%0A--%20insert%20instance%20with%20the%20right%20userdata%0AINSERT%20INTO%0A%20%20instance%20%28ami%2C%20instance_type%2C%20subnet_id%2C%20tags%2C%20user_data%2C%20key_pair_name%2C%20region%29%0ASELECT%0A%20%20%27resolve%3Assm%3A%2Faws%2Fservice%2Fcanonical%2Fubuntu%2Fserver%2F22.04%2Fstable%2Fcurrent%2Famd64%2Fhvm%2Febs-gp2%2Fami-id%27%2C%0A%20%20%27t2.small%27%2C%0A%20%20subnet.id%2C%0A%20%20%27%7B%22name%22%3A%22ghost-blog%22%7D%27%2C%0A%20%20%27%23%21%2Fbin%2Fbash%0Auseradd%20-m%20ghostuser%0Ausermod%20-a%20-G%20sudo%20ghostuser%0Aecho%20%22ghostuser%20ALL%3D%28ALL%3AALL%29%20NOPASSWD%3A%20ALL%22%20%7C%20sudo%20tee%20%2Fetc%2Fsudoers.d%2Fghostuser%0Asudo%20-E%20apt-get%20update%20-y%0Asudo%20-E%20apt-get%20upgrade%20-y%0Asudo%20-E%20apt-get%20-y%20install%20nginx%0Asudo%20-E%20ufw%20allow%20%22Nginx%20Full%22%0Asudo%20-E%20apt-get%20-y%20install%20mysql-server%0Asudo%20-E%20mysql%20-u%20root%20-e%20%22ALTER%20USER%20%22root%22%40%22localhost%22%20IDENTIFIED%20WITH%20mysql_native_password%20BY%20%5C%22ghost%5C%22%3B%22%0Acurl%20-sL%20https%3A%2F%2Fdeb.nodesource.com%2Fsetup_16.x%20%7C%20sudo%20-E%20bash%0Asudo%20-E%20apt-get%20-y%20install%20nodejs%0Asudo%20npm%20install%20ghost-cli%40latest%20-g%0Asudo%20-E%20mkdir%20-p%20%2Fvar%2Fwww%2Fghost%0Asudo%20-E%20chown%20ghostuser%20%2Fvar%2Fwww%2Fghost%0Asudo%20chmod%20775%20%2Fvar%2Fwww%2Fghost%0Acd%20%2Fvar%2Fwww%2Fghost%2F%0Asudo%20-u%20ghostuser%20ghost%20install%20--url%20http%3A%2F%2F%24%28curl%20http%3A%2F%2F169.254.169.254%2Flatest%2Fmeta-data%2Fpublic-ipv4%29%20--db%20mysql%20--dbpass%20ghost%20--no-prompt%20--start%20--enable%0A%27%2C%20%27ghost%27%2C%0A%20%20%27us-east-2%27%0AFROM%0A%20%20subnet%0A%20%20INNER%20JOIN%20vpc%20ON%20vpc.id%20%3D%20subnet.vpc_id%0A%20%20AND%20vpc.is_default%20%3D%20%27Y%27%0AWHERE%0A%20%20vpc.region%20%3D%20%27us-east-2%27%0A%20%20AND%20subnet.availability_zone%20%3D%20%27us-east-2a%27%0ALIMIT%0A%20%201%3B%0A%0A--%20insert%20instance%20security%20groups%0AINSERT%20INTO%0A%20%20instance_security_groups%20%28instance_id%2C%20security_group_id%29%0ASELECT%0A%20%20%28%0A%20%20%20%20SELECT%0A%20%20%20%20%20%20id%0A%20%20%20%20FROM%0A%20%20%20%20%20%20instance%0A%20%20%20%20WHERE%0A%20%20%20%20%20%20tags%20-%3E%3E%20%27name%27%20%3D%20%27ghost-blog%27%0A%20%20%20%20LIMIT%0A%20%20%20%20%20%201%0A%20%20%29%2C%0A%20%20%28%0A%20%20%20%20SELECT%0A%20%20%20%20%20%20id%0A%20%20%20%20FROM%0A%20%20%20%20%20%20security_group%0A%20%20%20%20WHERE%0A%20%20%20%20%20%20group_name%20%3D%20%27ghost_sg%27%0A%20%20%20%20%20%20AND%20region%20%3D%20%27us-east-2%27%0A%20%20%20%20LIMIT%0A%20%20%20%20%20%201%0A%20%20%29%3B%0A%0ASELECT%0A%20%20*%0AFROM%0A%20%20iasql_commit%28%29%3B"),{expires:1,domain:"localhost"==window.location.hostname?"localhost":"iasql.com"}),window.open("https://app.iasql.com/#/button/Install%20Ghost/2af3da94e843f47647d798890959c35aac237ac21b2d308d6343905828142b09","_blank")}},"Install Ghost")),(0,o.kt)("h2",{id:"accessing-ghost"},"Accessing Ghost"),(0,o.kt)("p",null,"After the process finishes (it will take over 10-15 minutes), you will have your Ghost instance installed, publicly accessible through the public IP of the spinned instance.\nYou can get the details of the public IP of your instance querying for the metadata:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT\n  public_ip_address\nFROM\n  instance_metadata\nWHERE\n  id = (\n    SELECT\n      id\n    FROM\n      instance\n    WHERE\n      tags ->> 'name' = 'ghost-blog'\n    LIMIT\n      1\n  );\n")),(0,o.kt)("p",null,"The initial Ghost installation will be available on the browser just query by ",(0,o.kt)("inlineCode",{parentName:"p"},"http://<public_ip_address>/ghost"),":"),(0,o.kt)("img",{src:"/img/configure_ghost.png",style:{maxWidth:600}}),(0,o.kt)("p",null,"This is the basic installation of Ghost, but it is just meant for development and testing purposes. Once you are satisfied with the setup,\nyou can continue to an advanced deployment of Ghost meant for production. This will come in a follow-up post from IaSQL."))}p.isMDXComponent=!0}}]);